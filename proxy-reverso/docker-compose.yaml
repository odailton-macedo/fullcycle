version: '3'

services:

  app-nodejs:
    build:
      context: .
      dockerfile: Dockerfile.app-nodejs      
    image: app-nodejs
    container_name: app-nodejs
    restart: always
    tty: true
    volumes:
      # Volume mapeado para link simbólico para evitar 
      # sobrescrever o conteúdo do diretório na montagem
      - ./:/usr/src/app-nodejs
    depends_on:
      - mysql
    entrypoint: dockerize -wait tcp://mysql:3306 -timeout 30s ./entrypoint.sh
    networks:
      - my_network
    ports:
      - 3000:3000


  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    image: odailton/nginx
    container_name: nginx
    restart: always
    depends_on:
      - app-nodejs
    networks:
      - my_network
    ports:
      - 8080:80


  mysql:
    image: mysql:5.7
    container_name: mysql
    command: --innodb-use-native-aio=0
    restart: always
    tty: true
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./mysql/db:/var/lib/mysql
    networks:
      - my_network
    ports:
      - 3306:3306


networks:
  my_network:
    name: "my_network1"
    driver: bridge
