###############################################################################
#
# DESAFIO PROXY REVERSO NGINX >> NODEJS >> MYSQL
#
# Nesse desafio você colocará em prática o que aprendemos em relação a 
# utilização do nginx como proxy reverso. A idéia principal é que quando um 
# usuário acesse o nginx, o mesmo fará uma chamada em nossa aplicação node.js. 
# Essa aplicação por sua vez adicionará um registro em nosso banco de dados 
# mysql, cadastrando um nome na tabela people.
# 
# retorno da aplicação node.js para o nginx deverá ser:
# 
# <1>Full Cycle Rocks!</h1>
# 
# Lista de nomes cadastrada no banco de dados.
# 
# Gere o docker-compose de uma forma que basta apenas rodarmos: 
# docker-compose up -d que tudo deverá estar funcionando e disponível na 
# porta: 8080.
# 
# ba tudo em um repositório e faça a entrega.
# 
# A linguagem de programação para este desafio é Node/JavaScript.
#
###############################################################################
#
# SOLUÇÃO
#
# O Nginx está rodando como proxy reverso no endereço localhost:8080, ao 
# acessar este endereço com qualquer rota o Nginx redireciona a requisição 
# para a aplicação Node.js que está rodando no container app-nodejs:3000 na 
# mesma rede.
#
# IMPORTANTE: A porta 3000 do container app-nodejs está exposta apenas para 
# fins de teste caso queira acessa-lá sem passar pelo proxy, não afetando o 
# comportamento da aplicação caso o compartilhamento dessa porta seja 
# desativado.
#
# Ao acessar a aplicação um nome aleatório é inserido na tabela "people" no
# banco de dados "nodedb" do MySQL e em seguida o conteúdo desta tabela é 
# listado e devolvido em formato html estilizado.
#
###############################################################################
#
# USO:
#
# Descompactar o arquivo do banco de dados no diretório da aplicação:
unzip mysql.zip
#
#
# Subir o Docker Compose:
docker compose up -d
#
#
# Acessar no browser (cada vez que a aplicação é carregada um novo registro será inserido):
http://localhost:8080
# 
#
# Descer a aplicação
docker compose down